"""
[739. 每日温度](https://leetcode-cn.com/problems/daily-temperatures/)
请根据每日 气温 列表，重新生成一个列表。对应位置的输出为：要想观测到更高的气温，至少需要等待的天数。如果气温在这之后都不会升高，请在该位置用 0 来代替。

例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。

提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。
***
如果不使用栈的方法，那么使用两次for循环的时间复杂度就是O(n^2)。所以这里选择使用的是单调栈，这里具体使用的是一个单调递减栈。

因为如果待加入的温度比栈顶当前的温度要高，那么就会产生一个弹栈的操作，因为此时栈顶的元素索引对应的温度值小于待加入的温度值，
那么我们就会记录下此时待加入的温度值索引差到栈顶对应的索引值内。

例如：stack[0]= 73，待加入 74， 那么73 < 74，就要弹栈。弹出的栈顶为0，74对应的索引为1，那么out [ 0 ] = 1。

"""
```python
class Solution:
    def dailyTemperatures(self, T: List[int]) -> List[int]:  
        stack = []
        out = [0]*len(T)
        for i, t in enumerate(T):#使用枚举类型，方便计算索引和对比温度值
            while stack and T[stack[-1]] < t:#当前栈不为空，并且栈顶的温度小于之后待加入的温度
                out[stack.pop()] = i - stack[-1]#弹栈，填入两者之间的索引差
            stack.append(i)
        return out

```
